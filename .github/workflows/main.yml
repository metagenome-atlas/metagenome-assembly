name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]


jobs:
  Formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Formatting
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          VALIDATE_SNAKEMAKE_SNAKEFMT: true

  Linting:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Lint workflow
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .
        snakefile: workflow/Snakefile
        args: "--lint"
      
      
  Dryrun:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v2.2.0
      with:
        channels: conda-forge,bioconda,defaults
    - run: conda install -y snakemake
    - run: cd metagenome-assembly
    - run: ls -l
    - name: Dryrun
      run: .test/dryrun.sh 

      

  Testing:
    runs-on: ubuntu-latest
    needs: 
#      - Linting
#      - Dryrun
      - Formatting
    steps:
    - uses: actions/checkout@v2
    - name: Test workflow with spades
      uses: snakemake/snakemake-github-action@v1.24.0
      with: 
        stagein: .test/copy_example_data.sh .test/spades
        directory: .test/spades
        snakefile: workflow/Snakefile
        args: "--use-conda --show-failed-logs --cores 3 --conda-cleanup-pkgs cache --all-temp"
        
    - name: Test report spades
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .test/spades
        snakefile: workflow/Snakefile
        args: "--report report.zip"
        
    - name: Test workflow with megahit
      uses: snakemake/snakemake-github-action@v1.24.0
      with: 
        stagein: .test/copy_example_data.sh .test/megahit
        directory: .test/megahit
        snakefile: workflow/Snakefile
        args: "--use-conda --show-failed-logs --cores 3 --conda-cleanup-pkgs cache --all-temp --config assembler=megahit "
        
    - name: Test report megahit
      uses: snakemake/snakemake-github-action@v1.24.0
      with:
        directory: .test/megahit
        snakefile: workflow/Snakefile
        args: "--report report.zip"
